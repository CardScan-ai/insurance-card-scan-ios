name: Update Swift Package

on:
  repository_dispatch:
    types: [new_release]

jobs:
  update_package:
    name: Update Package with New Release
    runs-on: macos-14
    
    steps:
    - name: Checkout Swift Package Repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Configure Git
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        
    - name: Download XCFramework from Release
      uses: robinraju/release-downloader@v1.11
      with:
        repository: CardScan-ai/swift-package-source
        tag: v${{ github.event.client_payload.version }}
        fileName: "*.xcframework.zip"
        token: ${{ secrets.PAT_TOKEN }}
        
    - name: Extract and Update XCFramework
      run: |
        VERSION="${{ github.event.client_payload.version }}"
        
        # Remove existing XCFramework if it exists
        rm -rf Sources/InsuranceCardScan.xcframework
        
        # Extract new XCFramework
        unzip InsuranceCardScan.xcframework.zip
        
        # Move to Sources directory
        mkdir -p Sources
        mv InsuranceCardScan.xcframework Sources/
        
        # Cleanup
        rm InsuranceCardScan.xcframework.zip
        
    - name: Update Package.swift (if needed)
      run: |
        VERSION="${{ github.event.client_payload.version }}"
        
        # Update version in Package.swift if it has a version field
        if grep -q "version:" Package.swift; then
          sed -i '' "s/version: \".*\"/version: \"$VERSION\"/" Package.swift
        fi
        
        # You might also want to update any version comments or other references
        
    - name: Commit and Tag Changes
      run: |
        VERSION="${{ github.event.client_payload.version }}"
        
        # Add all changes
        git add .
        
        # Check if there are changes to commit
        if git diff --staged --quiet; then
          echo "No changes to commit"
          exit 0
        fi
        
        # Commit changes
        git commit -m "Update to version $VERSION

        - Updated XCFramework binary
        - Release triggered from source repository"
        
        # Create tag
        git tag -a "$VERSION" -m "Release $VERSION"
        
        # Push changes and tags
        git push origin main
        git push origin "$VERSION"
        
    - name: Create Release in Package Repository
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.event.client_payload.version }}
        name: "Swift Package ${{ github.event.client_payload.version }}"
        body: |
          Updated Swift Package with InsuranceCardScan ${{ github.event.client_payload.version }}
          
          ## Installation
          
          Add this package to your project using Swift Package Manager:
          
          ```swift
          dependencies: [
              .package(url: "https://github.com/CardScan-ai/insurance-card-scan-ios", from: "${{ github.event.client_payload.version }}")
          ]
          ```
          
          ## Source
          
          This release corresponds to InsuranceCardScan ${{ github.event.client_payload.version }}
        draft: false
        prerelease: false
        token: ${{ secrets.GITHUB_TOKEN }}